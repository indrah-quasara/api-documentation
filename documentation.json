{
    "openapi": "3.0.3",
    "info": {
        "title": "Quasara API",
        "version": "1.0.1"
    },
   
    "tags": [
        {
            "name": "EMBED API",
            "description": "Handles turning raw data into vectors"
        },
        {
            "name": "SEARCH API",
            "description": "Handles searching and analytics based on vector embeddings"
        },
        {
            "name": "DATASET & OBJECT MANAGEMENT",
            "description": "Handles dataset and object metadata"
        },
        {
            "name": "JOB MANAGEMENT & AUTHORISATION",
            "description": "Handles User Sessions & Async Jobs"
        }
    ],
    "paths": {
        "/define-dataset": {
            "post": {
                "tags": [
                    "EMBED API"
                ],
                "summary": "Define a New Dataset",
                "description": "This endpoint allows users to define a new dataset.",
                "operationId": "defineDataset",
                "requestBody": {
                    "description": "Define a new dataset by providing necessary details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dataset_display_name": {
                                        "type": "string",
                                        "description": "The display name of the dataset.",
                                        "example": "My New Dataset"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type of the request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dataset defined successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dataset My New Dataset defined successfully."
                                        },
                                        "dataset_id": {
                                            "type": "string",
                                            "example": "ds_12345abcdef"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An internal server error occurred."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upload-dataset": {
            "post": {
                "tags": [
                    "EMBED API"
                ],
                "summary": "Upload a Dataset ZIP File",
                "description": "This endpoint allows users to upload a ZIP file containing a dataset to a specific dataset ID.",
                "operationId": "uploadDataset",
                "requestBody": {
                    "description": "Upload a ZIP file containing dataset files.",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dataset_zip_file": {
                                        "type": "string",
                                        "format": "byte",
                                        "description": "The ZIP file containing the dataset.",
                                        "example": "data.zip"
                                    },
                                    "dataset_id": {
                                        "type": "string",
                                        "description": "The unique identifier for the dataset being updated.",
                                        "example": "ds_12345abcdef"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "multipart/form-data",
                            "description": "Content type of the request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dataset ZIP file uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully uploaded the ZIP file to dataset_id. The dataset contains 10 files."
                                        },
                                        "skipped_files": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "file1.csv",
                                                "file2.csv"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An internal server error occurred."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/extract-embeddings": {
            "post": {
                "tags": [
                    "EMBED API"
                ],
                "summary": "Extract Embeddings from Dataset",
                "description": "This endpoint allows users to extract embeddings from a specified dataset using a given model and configuration options.",
                "operationId": "extractEmbeddings",
                "requestBody": {
                    "description": "Request to extract embeddings from the dataset.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dataset_id": {
                                        "type": "string",
                                        "description": "The unique identifier for the dataset.",
                                        "example": "ds_12345abcdef"
                                    },
                                    "model_name": {
                                        "type": "string",
                                        "description": "(Optional) The name of the model to use for processing the dataset. Format: model_name:version.",
                                        "example": "best:v2"
                                    },
                                    "split_method": {
                                        "type": "string",
                                        "description": "(Optional) The method for splitting the dataset. If not provided, the default method will be used.",
                                        "example": "methodX"
                                    },
                                    "process_splits": {
                                        "type": "boolean",
                                        "description": "(Optional) Flag to indicate if splits should be processed. Defaults to true.",
                                        "example": true
                                    },
                                    "process_images": {
                                        "type": "boolean",
                                        "description": "(Optional) Flag to indicate if images should be processed. Defaults to true.",
                                        "example": true
                                    },
                                    "batch_size": {
                                        "type": "integer",
                                        "description": "(Optional) The number of items to process in each batch.",
                                        "example": 100
                                    },
                                    "log_to_mail": {
                                        "type": "boolean",
                                        "description": "(Optional) Flag to receive email notifications about the job status.",
                                        "example": true
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type of the request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Job created successfully for embedding extraction.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "job_id": {
                                            "type": "string",
                                            "example": "job-12345"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "At least one of 'process_images' or 'process_splits' must be set to True."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid API credentials."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An internal server error occurred."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/download-embeddings": {
            "post": {
                "tags": [
                    "EMBED API"
                ],
                "summary": "Download Embeddings for a Tag",
                "description": "This endpoint allows users to download embeddings associated with a specific tag.",
                "operationId": "downloadEmbeddings",
                "requestBody": {
                    "description": "Request to download embeddings for a specific tag.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tag_id": {
                                        "type": "string",
                                        "description": "The unique identifier for the tag you want to download.",
                                        "example": "job-12345"
                                    },
                                    "update_embeddings": {
                                        "type": "boolean",
                                        "description": "(Optional) Flag to indicate if embeddings need to be re-downloaded after a tag update.",
                                        "example": false
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type of the request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job status retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "job_id": {
                                            "type": "string",
                                            "example": "job-12345"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid job_id provided."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Job with the provided ID does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search": {
            "post": {
                "tags": [
                    "SEARCH API"
                ],
                "summary": "Search the Dataset",
                "description": "This endpoint allows users to search the dataset using either a text query or an image query.",
                "operationId": "searchDataset",
                "requestBody": {
                    "description": "Request to search the dataset using text or image query.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tag_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "A list of tag IDs to filter the dataset. Only results matching these tags will be included in the search.",
                                        "example": [
                                            "tag1",
                                            "tag2"
                                        ]
                                    },
                                    "text_query": {
                                        "type": "string",
                                        "description": "(Optional) A text query to search the dataset. Only one text query is supported for now.",
                                        "example": "town village"
                                    },
                                    "image_query": {
                                        "type": "string",
                                        "description": "(Optional) A base64 encoded image query to search the dataset. Only one image query is supported for now.",
                                        "example": "/9j/4AAQSkZJRgABAQAAA..."
                                    },
                                    "search_in_small_objects": {
                                        "type": "boolean",
                                        "description": "(Optional) Set this to true to search for small objects. Defaults to false if not specified.",
                                        "example": true
                                    },
                                    "search_in_images": {
                                        "type": "boolean",
                                        "description": "(Optional) Set this to true to search within images. At least one of search_in_images or search_in_small_objects must be true.",
                                        "example": true
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "description": "(Optional) The maximum number of search results to return. If not provided, the default limit is 10.",
                                        "example": 10
                                    },
                                    "offset": {
                                        "type": "integer",
                                        "description": "(Optional) The starting point for search results, useful for pagination.",
                                        "example": 0
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type of the request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful search results.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "search_results_id": {
                                            "type": "string",
                                            "example": "search-12345"
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "corpus_id": {
                                                        "type": "string",
                                                        "example": "corpus-98765"
                                                    },
                                                    "score": {
                                                        "type": "number",
                                                        "example": 0.92
                                                    },
                                                    "file_path": {
                                                        "type": "string",
                                                        "example": "/path/to/file"
                                                    },
                                                    "caption": {
                                                        "type": "string",
                                                        "example": "A scenic view of the town"
                                                    },
                                                    "coordinate": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "example": [
                                                            "lat1",
                                                            "long1"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input parameters."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fetch-data-analytics-info": {
            "post": {
                "tags": [
                    "SEARCH API"
                ],
                "summary": "Fetch Data Analytics Information",
                "description": "This endpoint allows users to retrieve the data analytics information for a specified tag.",
                "operationId": "fetchDataAnalyticsInfo",
                "requestBody": {
                    "description": "Request to fetch the data analytics information for the specified tag.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tag_id": {
                                        "type": "string",
                                        "description": "The unique identifier for the tag.",
                                        "example": "ds_12345abcdef"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type of the request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of data analytics info.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "data_analytics_id": {
                                                "type": "string",
                                                "example": "data_analytics_98765"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "clustering"
                                            },
                                            "algorithm": {
                                                "type": "string",
                                                "example": "k-means"
                                            },
                                            "is_completed": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "dimension_size": {
                                                "type": "integer",
                                                "example": 128
                                            },
                                            "dimensionality_reduction_algorithm": {
                                                "type": "string",
                                                "example": "UMAP"
                                            },
                                            "score_threshold": {
                                                "type": "number",
                                                "example": 0.85
                                            },
                                            "contamination": {
                                                "type": "number",
                                                "example": 0.05
                                            },
                                            "analysis_details": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total_clusters": {
                                                            "type": "string",
                                                            "example": "5"
                                                        },
                                                        "total_outliers": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "algorithm_time_taken": {
                                                            "type": "number",
                                                            "example": 45.6
                                                        },
                                                        "mean_cluster_size": {
                                                            "type": "number",
                                                            "example": 100.4
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input parameters."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fetch-data-analytics-results": {
            "post": {
                "tags": [
                    "SEARCH API"
                ],
                "summary": "Fetch Data Analytics Results",
                "description": "This endpoint allows users to fetch the results of the data analytics process.",
                "operationId": "fetchDataAnalyticsResults",
                "requestBody": {
                    "description": "Request to fetch the results for the specified data analytics.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data_analytics_id": {
                                        "type": "string",
                                        "description": "The unique identifier for the data analytics. This id is unique for a tag_id and corresponding data analytics configurations.",
                                        "example": "ds_12345abcdef"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type of the request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of data analytics results.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "s3_path": {
                                                "type": "string",
                                                "example": "s3://path/to/image"
                                            },
                                            "cluster_label": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "visualization_vector": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number",
                                                    "example": [
                                                        0.12,
                                                        0.56,
                                                        0.87,
                                                        0.45
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input parameters."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retrieve-object-detection-data": {
            "post": {
                "tags": [
                    "SEARCH API"
                ],
                "summary": "Retrieve Object Detection Data",
                "description": "This endpoint allows users to retrieve object detection data for a specific job.",
                "operationId": "retrieveObjectDetectionData",
                "requestBody": {
                    "description": "Request to fetch object detection data for a specified job.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "job_id": {
                                        "type": "string",
                                        "description": "The unique identifier for the job. This ID corresponds to a specific job or operation being processed.",
                                        "example": "67619a8ded2afa0e23b3c839"
                                    },
                                    "page": {
                                        "type": "integer",
                                        "description": "The page number to retrieve for paginated results.",
                                        "example": 1
                                    },
                                    "page_size": {
                                        "type": "integer",
                                        "description": "The number of items to include per page in the paginated results.",
                                        "example": 50
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type of the request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of object detection data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "page_size": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "total_count": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "s3_path": {
                                                        "type": "string",
                                                        "example": "city-drive-india/wp-video_frame_1260.jpg"
                                                    },
                                                    "score": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "number",
                                                            "example": 0.7393625378608704
                                                        }
                                                    },
                                                    "label": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": [
                                                                "car",
                                                                "people"
                                                            ]
                                                        }
                                                    },
                                                    "box": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "number",
                                                            "example": [
                                                                346.19,
                                                                454.55,
                                                                683.09,
                                                                624.92
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input parameters."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/detect-objects": {
            "post": {
                "tags": [
                    "DATASET & OBJECT MANAGEMENT"
                ],
                "summary": "Initiate Object Detection Job",
                "description": "This endpoint allows users to start a job for object detection. Users can specify either `dataset_id` or `search_result_id`.",
                "operationId": "detectObjects",
                "requestBody": {
                    "description": "Request to initiate an object detection job.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "model_name": {
                                        "type": "string",
                                        "description": "The name of the model to use for embedding extraction.",
                                        "example": "grounding_dino:v1"
                                    },
                                    "labels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "List of labels to detect.",
                                        "example": [
                                            "person",
                                            "car"
                                        ]
                                    },
                                    "dataset_id": {
                                        "type": "string",
                                        "description": "The ID of the dataset to extract embeddings from.",
                                        "example": "dataset-12345"
                                    },
                                    "batch_size": {
                                        "type": "integer",
                                        "description": "Batch size for processing images.",
                                        "example": 32
                                    },
                                    "log_to_mail": {
                                        "type": "boolean",
                                        "description": "Whether to log errors to email.",
                                        "example": true
                                    },
                                    "search_results_id": {
                                        "type": "string",
                                        "description": "Optional ID of the search results.",
                                        "example": "search-results-67890"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type of the request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Job created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "job_id": {
                                            "type": "string",
                                            "example": "job-12345"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid job_id provided."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Job with the provided ID does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "tags": [
                    "DATASET & OBJECT MANAGEMENT"
                ],
                "summary": "Retrieve Tags",
                "description": "This endpoint allows users to retrieve a list of tags along with their associated resources and model labels.",
                "operationId": "getTags",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of tags.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tag_id": {
                                                        "type": "string",
                                                        "description": "The unique ID of the tag.",
                                                        "example": "ds_12345abcdef"
                                                    },
                                                    "tag_name": {
                                                        "type": "string",
                                                        "description": "The name of the tag.",
                                                        "example": "car"
                                                    },
                                                    "model_label": {
                                                        "type": "string",
                                                        "description": "The model label associated with this tag.",
                                                        "example": "best:v2"
                                                    },
                                                    "resources": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "A list of resources related to the tag.",
                                                        "example": [
                                                            "image",
                                                            "video"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input provided."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/update-tags": {
            "post": {
                "tags": [
                    "DATASET & OBJECT MANAGEMENT"
                ],
                "summary": "Update Tags for Dataset",
                "description": "This endpoint allows users to update the tags associated with a specific dataset.",
                "operationId": "updateTags",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type for the request body"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dataset_id": {
                                        "type": "string",
                                        "description": "The unique identifier for the dataset.",
                                        "example": "ds_12345abcdef"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Job created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "job_id": {
                                            "type": "string",
                                            "description": "The ID of the created job.",
                                            "example": "job-12345"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid input.",
                                            "example": "Invalid dataset_id provided."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid credentials.",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to an internal server issue.",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/datasets": {
            "get": {
                "tags": [
                    "DATASET & OBJECT MANAGEMENT"
                ],
                "summary": "Retrieve List of Datasets",
                "description": "This endpoint allows users to retrieve a list of available datasets.",
                "operationId": "listDatasets",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of dataset list.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "dataset_display_name": {
                                                        "type": "string",
                                                        "description": "The display name of the dataset.",
                                                        "example": "Dataset A"
                                                    },
                                                    "dataset_id": {
                                                        "type": "string",
                                                        "description": "The unique identifier for the dataset.",
                                                        "example": "ds_12345abcdef"
                                                    },
                                                    "dataset_size": {
                                                        "type": "string",
                                                        "description": "The size of the dataset.",
                                                        "example": "10000"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid input."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid credentials."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to an internal server issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/models": {
            "get": {
                "tags": [
                    "DATASET & OBJECT MANAGEMENT"
                ],
                "summary": "Retrieve List of Models",
                "description": "This endpoint allows users to retrieve a list of available models.",
                "operationId": "listModels",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of model list.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "model_name": {
                                                        "type": "string",
                                                        "description": "The name of the model.",
                                                        "example": "model_v1"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid input."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid credentials."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to an internal server issue."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analyze-data": {
            "post": {
                "tags": [
                    "JOB MANAGEMENT & AUTHORISATION"
                ],
                "summary": "Analyze Data",
                "description": "This endpoint allows users to initiate clustering, similarity, and outlier detection for a specified tag. \nIf the data analytics process has already been completed for the given tag, a message will be returned, \nand users can use the `/fetch-data-analytics` endpoint to retrieve the results. Otherwise, the API creates \na job and returns a job ID.\n",
                "operationId": "analyzeData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tag_id": {
                                        "type": "string",
                                        "description": "The unique identifier for the tag.",
                                        "example": "ds_12345abcdef"
                                    },
                                    "analytic_type": {
                                        "type": "string",
                                        "description": "Type of the data analytics (clustering, similarity, or outlier).",
                                        "example": "clustering"
                                    },
                                    "algorithm": {
                                        "type": "string",
                                        "description": "The main algorithm to be used for the process.",
                                        "example": "Pair-wise community detection"
                                    },
                                    "dimensionality_reduction_algorithm": {
                                        "type": "string",
                                        "description": "The algorithm to be used for dimensionality reduction.",
                                        "example": "PACMAP"
                                    },
                                    "dimension_size": {
                                        "type": "integer",
                                        "description": "The size of the dimension for dimensionality reduction.",
                                        "example": 5
                                    },
                                    "score_threshold": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "Threshold for clustering and similarity score.",
                                        "example": 0.75
                                    },
                                    "contamination": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "Contamination for the outlier detection algorithm.",
                                        "example": 0.5
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data analytics process for the provided configurations is already done.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data_analytic_id": {
                                            "type": "string",
                                            "description": "The unique identifier for the data analytics process.",
                                            "example": "data_analytics_12345"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Message indicating the process is already done.",
                                            "example": "Data analytics already completed."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Job created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "job_id": {
                                            "type": "string",
                                            "description": "The ID of the created job.",
                                            "example": "job-12345"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error.",
                                            "example": "Invalid input data."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error due to invalid credentials.",
                                            "example": "Unauthorized access."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error due to an internal server issue.",
                                            "example": "An internal server error occurred."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/job-status": {
            "post": {
                "tags": [
                    "JOB MANAGEMENT & AUTHORISATION"
                ],
                "summary": "Check Job Status",
                "description": "This endpoint allows users to check the current status of a specific job. \nBy providing the job ID, the API returns the job's status, including the processing stage and additional details.\n",
                "operationId": "checkJobStatus",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type of the request"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "job_id": {
                                        "type": "string",
                                        "description": "The unique identifier for the job you want to check.",
                                        "example": "job-12345"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Job status retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "job_id": {
                                            "type": "string",
                                            "description": "The ID of the job being checked.",
                                            "example": "job-12345"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "The current status of the job.",
                                            "example": "PROCESSING"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A message providing additional details about the job's current state.",
                                            "example": "PROCESSING IMAGE"
                                        },
                                        "bucket_idx": {
                                            "type": "integer",
                                            "description": "The index of the bucket currently being processed, if applicable.",
                                            "example": 2
                                        },
                                        "batch": {
                                            "type": "integer",
                                            "description": "The index of the batch currently being processed, if applicable.",
                                            "example": 5
                                        },
                                        "percentage": {
                                            "type": "object",
                                            "properties": {
                                                "images": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "description": "The percentage of images processed.",
                                                    "example": 75
                                                },
                                                "splits": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "description": "The percentage of splits processed.",
                                                    "example": 50
                                                }
                                            }
                                        },
                                        "avg_batch_time": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Average batch time.",
                                            "example": 2.1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid input.",
                                            "example": "Invalid job_id provided."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid credentials.",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred because the job was not found.",
                                            "example": "Job with the provided ID does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to an internal server issue.",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobs": {
            "get": {
                "tags": [
                    "JOB MANAGEMENT & AUTHORISATION"
                ],
                "summary": "Fetch User's Jobs",
                "description": "This endpoint retrieves a list of jobs associated with the authenticated user. \nFor each job, details such as job ID, the dataset it is linked to, current status, \na message, and the timestamp of creation or last update are included.\n",
                "operationId": "getUserJobs",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of jobs associated with the user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "job_id": {
                                                "type": "string",
                                                "description": "The unique identifier of the job.",
                                                "example": "job-67890"
                                            },
                                            "dataset_id": {
                                                "type": "string",
                                                "description": "The unique identifier of the dataset associated with the job.",
                                                "example": "ds-12345"
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "The current status of the job.",
                                                "example": "COMPLETED"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "A message associated with the job status.",
                                                "example": "Job completed successfully."
                                            },
                                            "time": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp of the job creation or last update.",
                                                "example": "2023-08-27T14:55:29Z"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid credentials.",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to an internal server issue.",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pause-job": {
            "put": {
                "tags": [
                    "JOB MANAGEMENT & AUTHORISATION"
                ],
                "summary": "Pause a Running Job",
                "description": "This endpoint allows users to pause a currently running job by updating its status to \"STOPPING_PAUSED\" or \"PAUSED\". \nIf the job is already completed, paused, or in a non-pausable state, the current status will be returned without making any changes.\n",
                "operationId": "pauseJob",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "API key for authentication (Bearer token)"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Accepted response format"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json",
                            "description": "Content type of the request body"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "job_id": {
                                        "type": "string",
                                        "description": "The unique identifier of the job to be paused.",
                                        "example": "job-67890"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Job status updated successfully or current status returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "job_id": {
                                            "type": "string",
                                            "description": "The ID of the job being paused.",
                                            "example": "job-67890"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "The updated or current status of the job.",
                                            "example": "PAUSED"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A message describing the current state of the job.",
                                            "example": "Job is already paused."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input or non-pausable state.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid input or the job being in a non-pausable state.",
                                            "example": "Job is not in a pausable state."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid credentials.",
                                            "example": "Unauthorized access, please check your API key."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred because the job was not found.",
                                            "example": "Job with the provided ID does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to an internal server issue.",
                                            "example": "An unexpected error occurred, please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "JOB MANAGEMENT & AUTHORISATION"
                ],
                "summary": "Login to get API Key",
                "description": "This endpoint allows users to obtain an API key by providing their email and password for authentication.\n",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "The email of the user.",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "The password of the user.",
                                        "example": "securePassword123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API Key generated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "api_key": {
                                            "type": "string",
                                            "description": "The unique API Key.",
                                            "example": "ds_12345abcdef"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to invalid input.",
                                            "example": "Invalid input data."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error due to invalid credentials.",
                                            "example": "Unauthorized access."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Description of the error that occurred due to an internal server issue.",
                                            "example": "An internal server error occurred."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
